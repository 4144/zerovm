zrt.c; main, 637: DEBUG INFORMATION FOR 'reader' NODE
zrt.c; main, 638: user heap pointer address = 1245184
zrt.c; main, 639: user memory size = 33554432
zrt.c; main, 640: syscall limit = 1234
zrt.c; main, 641: 000000000000000000000000000000000000000000000000000000000000
zrt.c; main, 642: sizeof(struct ZVMChannel) = 56
zrt.c; main, 643: channels count = 5
zrt.c; main, 644: 000000000000000000000000000000000000000000000000000000000000
zrt.c; main, 647: channel[0].name = '/dev/stdin'
zrt.c; main, 648: channel[0].type = 0
zrt.c; main, 649: channel[0].size = 0
zrt.c; main, 650: channel[0].limits[GetsLimit] = 999999
zrt.c; main, 651: channel[0].limits[GetSizeLimit] = 999999
zrt.c; main, 652: channel[0].limits[PutsLimit] = 0
zrt.c; main, 653: channel[0].limits[PutSizeLimit] = 0
zrt.c; main, 647: channel[1].name = '/dev/stdout'
zrt.c; main, 648: channel[1].type = 0
zrt.c; main, 649: channel[1].size = 0
zrt.c; main, 650: channel[1].limits[GetsLimit] = 0
zrt.c; main, 651: channel[1].limits[GetSizeLimit] = 0
zrt.c; main, 652: channel[1].limits[PutsLimit] = 999999
zrt.c; main, 653: channel[1].limits[PutSizeLimit] = 999999
zrt.c; main, 647: channel[2].name = '/dev/stderr'
zrt.c; main, 648: channel[2].type = 0
zrt.c; main, 649: channel[2].size = 0
zrt.c; main, 650: channel[2].limits[GetsLimit] = 0
zrt.c; main, 651: channel[2].limits[GetSizeLimit] = 0
zrt.c; main, 652: channel[2].limits[PutsLimit] = 999999
zrt.c; main, 653: channel[2].limits[PutSizeLimit] = 999999
zrt.c; main, 647: channel[3].name = '/dev/debug'
zrt.c; main, 648: channel[3].type = 0
zrt.c; main, 649: channel[3].size = 0
zrt.c; main, 650: channel[3].limits[GetsLimit] = 0
zrt.c; main, 651: channel[3].limits[GetSizeLimit] = 0
zrt.c; main, 652: channel[3].limits[PutsLimit] = 999999
zrt.c; main, 653: channel[3].limits[PutSizeLimit] = 999999
zrt.c; main, 647: channel[4].name = 'data'
zrt.c; main, 648: channel[4].type = 0
zrt.c; main, 649: channel[4].size = 0
zrt.c; main, 650: channel[4].limits[GetsLimit] = 999999
zrt.c; main, 651: channel[4].limits[GetSizeLimit] = 999999
zrt.c; main, 652: channel[4].limits[PutsLimit] = 0
zrt.c; main, 653: channel[4].limits[PutSizeLimit] = 0
zrt.c; main, 655: 000000000000000000000000000000000000000000000000000000000000
zrt.c; zrt_open, 98: name = data, flags = 0, mode = 0
zrt.c; zrt_fstat, 277: handle = 4, stat_addr = FFFFECD0
zrt.c; zrt_mmap, 346: args[0] = 0, args[1] = 1000, args[2] = 3, args[3] = 22, args[4] = FFFFFFFF, args[5] = FFFFED28, 
zrt.c; zrt_read, 132: handle = 4, buffer = 1000000, length = 1
zrt.c; zrt_read, 141: 1 bytes has been read
zrt.c; zrt_read, 132: handle = 4, buffer = 1000000, length = 1
zrt.c; zrt_read, 141: 1 bytes has been read
zrt.c; zrt_read, 132: handle = 4, buffer = 1000000, length = 1
zrt.c; zrt_read, 141: 1 bytes has been read
zrt.c; zrt_read, 132: handle = 4, buffer = 1000000, length = 1
zrt.c; zrt_read, 141: 1 bytes has been read
zrt.c; zrt_read, 132: handle = 4, buffer = 1000000, length = 1
zrt.c; zrt_read, 141: 1 bytes has been read
zrt.c; zrt_read, 132: handle = 4, buffer = 1000000, length = 1
zrt.c; zrt_read, 141: 1 bytes has been read
zrt.c; zrt_read, 132: handle = 4, buffer = 1000000, length = 1
zrt.c; zrt_read, 141: 1 bytes has been read
zrt.c; zrt_read, 132: handle = 4, buffer = 1000000, length = 1
zrt.c; zrt_read, 141: 1 bytes has been read
zrt.c; zrt_read, 132: handle = 4, buffer = 1000000, length = 1
zrt.c; zrt_read, 141: 1 bytes has been read
zrt.c; zrt_read, 132: handle = 4, buffer = 1000000, length = 1
zrt.c; zrt_read, 141: 1 bytes has been read
zrt.c; zrt_read, 132: handle = 4, buffer = 1000000, length = 1
zrt.c; zrt_read, 141: 1 bytes has been read
zrt.c; zrt_read, 132: handle = 4, buffer = 1000000, length = 1
zrt.c; zrt_read, 141: 1 bytes has been read
zrt.c; zrt_read, 132: handle = 4, buffer = 1000000, length = 1
zrt.c; zrt_read, 141: 1 bytes has been read
zrt.c; zrt_read, 132: handle = 4, buffer = 1000000, length = 1
zrt.c; zrt_read, 141: 0 bytes has been read
zrt.c; zrt_fstat, 277: handle = 1, stat_addr = FFFFECA0
zrt.c; zrt_mmap, 346: args[0] = 0, args[1] = 1000, args[2] = 3, args[3] = 22, args[4] = FFFFFFFF, args[5] = FFFFECF8, 
zrt.c; zrt_write, 149: handle = 1, buffer = e001c, length = 19
zrt.c; zrt_write, 158: 19 bytes has been written
zrt.c; zrt_write, 149: handle = 1, buffer = ff0000, length = 1
zrt.c; zrt_write, 158: 1 bytes has been written
zrt.c; zrt_write, 149: handle = 1, buffer = ffffec86, length = 2
zrt.c; zrt_write, 158: 2 bytes has been written
zrt.c; zrt_write, 149: handle = 1, buffer = ff0000, length = 1
zrt.c; zrt_write, 158: 1 bytes has been written
zrt.c; zrt_write, 149: handle = 1, buffer = e0033, length = 16
zrt.c; zrt_write, 158: 16 bytes has been written
zrt.c; zrt_close, 116: handle = 4
zrt.c; zrt_munmap, 363: args[0] = 1000000, args[1] = 1000
zrt.c; zrt_sysbrk, 331: break = 150000
zrt.c; zrt_exit, 382: code = 0
