this is the premature zerovm channels description
-------------------------------------------------

zerovm has 7 types of channels: 4, 5, 6 - reserved for the standard c90 
streams (stdin, stdout, stdout); 0, 1, 2, 3 - sequential read / sequential write,
sequential read / random write, random read / sequential write, random read / random write.
of course channels 4, 5, 6 can be described with combination of 0, 1, 2, 3 types and
read/write limits. however zerovm must guarantee existence of standard streams. and this
is the way to control presence of mandatory channels.

channel is the file abstraction over the local files and network streams. local files
can have random access type, network streams are always sequential. 

channel fields passed via the manifest:
name -- local file name or ipc address
alias -- name for user side. cannot be same as "name".
type -- access type. can be 0..6
gets -- the number of gets allowed for the channel
get_size -- data allowed to read in bytes
puts -- the number of puts allowed for the channel
put_size -- data allowed to write in bytes


fields set up by zerovm:
handle -- local file / network stream number in channels list. this number the only
          way to identify channel. secured from user: user get synthetic number
          (index in channels array)
size -- channel size. only available for user when channel has pure or mixed random access
position -- (get position, put position) - channel cursor position. only available 
            for user when channel has pure or mixed random access
counters -- counters for each i/o limit. available for user
          
all channels opened before the nexe start and closed after nexe end.


user channel description (this information user can get through zerovm api)
1. [secured] channel name
2. [secured] channel handle
3. access type
	 sequential read, sequential write 
   random read, sequential write
   sequential read, random write
   random read, random write
0. [optional] channel size. only valid for random (or mixed) access channels
0. [optional] position. only valid for random (or mixed) access channels
4. access restrictions
	 - gets
	 - get bytes
	 - puts
	 - put bytes 
5. access counters
	 - gets
	 - get bytes
	 - puts
	 - put bytes
