This document describes manifest for ZeroVM NaCl application.
update: a new design
-------------------------------------------------------------


Description:
The manifest is a text file which must be provided in order to run a NaCl application inside ZeroVM. 
Manifest samples can be found in "samples" directory.


Structure:
- each valid line must contain exactly only one key and one value separated by exactly one '=' sign
- both key and value may contain spaces
- key/value case does matter: "key" and "KeY" are treated as a different keywords
- spaces around key/value will be ignored
- lines are delimited with EOL (unix or windows style)
- invalid lines will be ignored
- lines with unknown keywords (not mentioned below) will be ignored
- some keywords expects complex values: comma separated values. for example, "Environment"


Valid keywords:
Input/Output
	Channel -- expects 7 comma separated attributes. The order does matter. Example:
	  Channel = /home/dazo/git/zerovm/samples/sort/sort.stdout.log, /dev/stdout, 5, 0, 0, 99999999, 99999999
	  where: [1] trusted channel name (n/a for the user), [2] untrusted channel name, [3] access type, 
	         [4] gets limit, [5] get size limits, [6] puts limit, [7] put size limits
See channels.txt for more info.

User space custom attributes
  Environment -- expects comma separated pairs: key, value. example:
  Environment = TimeStamp, 1337012520, UserETag, 74ebada55, XObjectMetaTag, klaatu_barada_nikto, ContentType, utf-8
See environment.txt for more info.

Nexe command line
  CommandLine -- command line arguments for nexe (will be redesigned soon)

Report request
  ReportRetCode -- request exit code of ZeroVM executable
  ReportEtag -- request checksum of the user output
  ReportUserRetCode -- request exit code of the user program
  ReportContentType -- reserved
  ReportXObjectMetaTag -- request custom attributes (set by user)

  perhaps will be replaced by a new design: Report = {comma separated keys}. for example:
  Report = RetCode, Etag, UserRetCode, ContentType, XObjectMetaTag

ZeroVM control
  Version -- manifest version. ZeroVM only can parse known version
  Log -- ZeroVM log file name (will be removed soon)
  Report -- report file name (will be removed soon)
  Nexe -- nexe file name
  NexeMax -- maximum allowed nexe size in bytes
  NexeEtag -- reserved for "fast validation"
  Timeout -- total ZeroVM run time 
  MemMax -- total available memory size for nexe
  CPUMax -- cpu time allotted to nexe execution
  SyscallsMax -- number of syscall invocation allowed to nexe
  

Both keywords and values have size limit of 64kb, so far.