This document describes ZeroVM security, how ZeroVM stands against 
possible attacks
(up to date 2014-05-12, needs editing)
---------------------------------------------------------------------

We assume that original NaCl implementation is perfect and will analyze
only the ZeroVM features that can affect the system security.

trap()
------
The trap() syscall contains several functions each of them can have bugs
that lead to security vulnerability. Therefore each trap() function must
have full test coverage. Tests can be found in repository folder
/tests/functional/

user address space
------------------
it consists of 5 regions:
NULL -- 64kb at the beginning of address space not available for user. the
  region locked (user cannot change it's protection)
Trampoline -- 64kb after NULL available for reading and execution. the region
  locked
Heap -- heap size defined by system manifest. heap available for reading and
  writing. user allowed to change protection through zvm_mprotect()
Hole -- address space not available for user (the rest of address space not
  defined by manifest "Memory")
Manifest -- user manifest. read only area with system data available for user
  protection can be changed through zvm_mprotect()
Stack -- 16mb of user stack. locked

user address place protected with 40gb bumpers. 1st bumper precedes NULL, 2nd
one follows stack. only change in ZeroVM address space comparing to NaCl is
user manifest.

Other ZeroVM code
-----------------
Most dangerous are the functions that work when user application is running.
These are: to_app.S, to_trap.S, syscall_hook.c, switch_to_app.c and trap.c.
All this code should be covered with security tests. Some tests can be found
in repository folder /tests/security. more tests incoming. 

Loader
--------
ZeroVM have no trusted loader. elf loader moved to untrusted side. validation
implemented through zvm_mprotect(). since untrusted code isolated by NaCl sfi
model untrusted loader more secure then trusted loader

Network channels
----------------
to send user data from one session to other, ZeroVM uses network broker.
ZeroVM does not analyze user data

Manifest
--------
Current version of the manifest is treated as secure. User can only view
specific fields. However security tests will be useful.
